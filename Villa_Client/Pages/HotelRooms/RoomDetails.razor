@page "/hotel/room-details/{Id:int}"
@inject IJSRuntime JsRuntime
@inject ILocalStorageService LocalStorage
@inject IHotelRoomService HotelRoomService
@inject IStripePaymentService StripePaymentService
@inject IRoomOrderDetailsService RoomOrderDetails
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = SD.Role_Customer)]

@if (HotelBooking?.OrderDetails?.HotelRoomDto?.HotelRoomImages == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">

        <div class="row p-2 my-3 " style="border-radius:20px; ">
            <div class="col-12 col-lg-7 p-4" style="border: 1px solid #fff">
                <div class="row px-2 text-success border-bottom">
                    <div class="col-8 py-1"><p style="font-size:x-large;margin:0px;">Selected Room</p></div>
                    <div class="col-4 p-0"><a href="hotel/rooms" class="btn btn-secondary btn-block">Back to Room's</a></div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <div id="" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    @{
                                        int imageIndex = 0;
                                        int innerImageIndex = 0;
                                    }
                                    @foreach (var image in HotelBooking.OrderDetails.HotelRoomDto.HotelRoomImages)
                                    {
                                        if (imageIndex == 0)
                                        {
                                            <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex" class="active"></li>

                                        }
                                        else
                                        {
                                            <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex"></li>
                                        }
                                        imageIndex++;
                                    }
                                </ol>
                                <div class="carousel-inner">
                                    @foreach (var image in HotelBooking.OrderDetails.HotelRoomDto.HotelRoomImages)
                                    {
                                        if (innerImageIndex == 0)
                                        {
                                            <div class="carousel-item active">
                                                <img class="d-block w-100" style="border-radius:20px;" src="@image.RoomImageUrl" alt="First slide">
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="carousel-item">
                                                <img class="d-block w-100" style="border-radius:20px;" src="@image.RoomImageUrl" alt="First slide">
                                            </div>
                                        }

                                        innerImageIndex++;
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <span class="float-right pt-4">
                            <span class="float-right">Max Occupancy : @HotelBooking.OrderDetails.HotelRoomDto.Occupancy adults </span><br />
                            <span class="float-right pt-1">Villa Size : @HotelBooking.OrderDetails.HotelRoomDto.SqFt sqft</span><br />
                            <h4 class="text-warning font-weight-bold pt-5">
                                USD
                                <span style="border-bottom:1px solid #ff6a00">
                                    @HotelBooking.OrderDetails.HotelRoomDto.TotalAmount.ToString("#,#.00#;(#,#.00#)")
                                </span>
                            </h4>
                            <span class="float-right">Cost for @HotelBooking.OrderDetails.HotelRoomDto.TotalDays nights</span>
                        </span>
                    </div>
                </div>
                <div class="row p-2">
                    <div class="col-12">
                        <p class="card-title text-warning" style="font-size:xx-large">@HotelBooking.OrderDetails.HotelRoomDto.Name</p>
                        <p class="card-text" style="font-size:large">
                            @((MarkupString)@HotelBooking.OrderDetails.HotelRoomDto.Details)
                        </p>
                    </div>

                </div>
            </div>

            <div class="col-12 col-lg-5 p-4 2 mt-4 mt-md-0" style="border: 1px solid #fff;">
                <EditForm Model="HotelBooking" class="container" OnValidSubmit="HandleCheckout">

                    <div class="row px-2 text-success border-bottom"><div class="col-7 py-1"><p style="font-size:x-large;margin:0px;">Enter Details</p></div></div>

                    <div class="form-group pt-2">
                        <label class="text-warning">Name</label>
                        <InputText @bind-Value="HotelBooking.OrderDetails.Name" type="text" class="form-control" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Phone</label>
                        <InputText @bind-Value="HotelBooking.OrderDetails.Phone" type="text" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Email</label>
                        <InputText @bind-Value="HotelBooking.OrderDetails.Email" type="text" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Check in Date</label>
                        <InputDate @bind-Value="HotelBooking.OrderDetails.CheckInDate" type="date" disabled class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Check Out Date</label>
                        <InputDate @bind-Value="HotelBooking.OrderDetails.CheckOutDate" type="date" disabled class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">No. of nights</label>
                        <select class="form-control" value="@NoOfNights" @onchange="HandleNoOfNightsChange">
                            @for (var i = 1; i <= 10; i++)
                            {
                                if (i == NoOfNights)
                                {
                                    <option value="@i" selected="selected">@i</option>
                                }
                                else
                                {
                                    <option value="@i">@i</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group">

                        @if (HotelBooking.OrderDetails.HotelRoomDto.IsBooked)
                        {
                            <input class="btn btn-secondary form-control" value="Sold Out" />
                        }
                        else
                        {
                            <button type="submit" class="btn btn-success form-control">Checkout Now</button>
                        }
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}



@code {
    [Parameter]
    public int? Id { get; set; }

    public HotelRoomBookingViewModel HotelBooking { get; set; } = new HotelRoomBookingViewModel();
    private int NoOfNights { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            HotelBooking.OrderDetails = new RoomOrderDetailsDto();
            if (Id != null)
            {
                if (await LocalStorage.GetItemAsync<HomeViewModel>(SD.Local_InitialBooking) != null)
                {
                    var roomInitialInfo = await LocalStorage.GetItemAsync<HomeViewModel>(SD.Local_InitialBooking);
                    HotelBooking.OrderDetails.HotelRoomDto = await HotelRoomService.GetHotelRoomDetails(Id.Value,
                        roomInitialInfo.StartDate.ToString("MM/dd/yyyy"), roomInitialInfo.EndDate.ToString("MM/dd/yyyy"));

                    NoOfNights = roomInitialInfo.NoOfNights;

                    HotelBooking.OrderDetails.CheckInDate = roomInitialInfo.StartDate;
                    HotelBooking.OrderDetails.CheckOutDate = roomInitialInfo.EndDate;
                    HotelBooking.OrderDetails.HotelRoomDto.TotalDays = roomInitialInfo.NoOfNights;
                    HotelBooking.OrderDetails.HotelRoomDto.TotalAmount =
                        roomInitialInfo.NoOfNights * HotelBooking.OrderDetails.HotelRoomDto.RegularRate;
                }
                else
                {
                    HotelBooking.OrderDetails.HotelRoomDto = await HotelRoomService.GetHotelRoomDetails(Id.Value,
                        DateTime.Now.ToString("MM/dd/yyyy"), DateTime.Now.AddDays(1).ToString("MM/dd/yyyy"));

                    NoOfNights = 1;

                    HotelBooking.OrderDetails.CheckInDate = DateTime.Now;
                    HotelBooking.OrderDetails.CheckOutDate = DateTime.Now.AddDays(1);
                    HotelBooking.OrderDetails.HotelRoomDto.TotalDays = 1;
                    HotelBooking.OrderDetails.HotelRoomDto.TotalAmount = HotelBooking.OrderDetails.HotelRoomDto.RegularRate;
                }
            }

            if (await LocalStorage.GetItemAsync<UserDto>(SD.Local_UserDetails) != null)
            {
                UserDto userDto = await LocalStorage.GetItemAsync<UserDto>(SD.Local_UserDetails);
                HotelBooking.OrderDetails.UserId = userDto.Id;
                HotelBooking.OrderDetails.Name = userDto.Name;
                HotelBooking.OrderDetails.Email = userDto.Email;
                HotelBooking.OrderDetails.Phone = userDto.PhoneNo;
            }
        }
        catch (Exception e)
        {
            await JsRuntime.ToastError(e.Message);
        }
    }


    private async Task HandleCheckout()
    {
        if (!await HandleValidation())
        {
            return;
        }

        try
        {
            var paymentDTO = new StripePaymentDto()
            {
                Amount = Convert.ToInt32(HotelBooking.OrderDetails.HotelRoomDto.TotalAmount * 100),
                ProductName = HotelBooking.OrderDetails.HotelRoomDto.Name,
                ReturnUrl = "/hotel/room-details/" + Id
            };

            var result = await StripePaymentService.CheckOut(paymentDTO);

            HotelBooking.OrderDetails.StripeSessionId = result.Data.ToString();
            HotelBooking.OrderDetails.RoomId = HotelBooking.OrderDetails.HotelRoomDto.Id;
            HotelBooking.OrderDetails.TotalCoast = HotelBooking.OrderDetails.HotelRoomDto.TotalAmount;

            var roomOrderDetailsSaved = await RoomOrderDetails.SaveRoomOrderDetails(HotelBooking.OrderDetails);

            await LocalStorage.SetItemAsync(SD.Local_RoomOrderDetails, roomOrderDetailsSaved);

            await JsRuntime.InvokeVoidAsync("redirectToCheckout", result.Data.ToString());
        }
        catch (Exception e)
        {
            await JsRuntime.ToastError(e.Message);
        }
    }



    private async Task<bool> HandleValidation()
    {
        if (string.IsNullOrEmpty(HotelBooking.OrderDetails.Name))
        {
            await JsRuntime.ToastError("Name cannot be empty");
            return false;
        }
        if (string.IsNullOrEmpty(HotelBooking.OrderDetails.Phone))
        {
            await JsRuntime.ToastError("Phone cannot be empty");
            return false;
        }

        if (string.IsNullOrEmpty(HotelBooking.OrderDetails.Email))
        {
            await JsRuntime.ToastError("Email cannot be empty");
            return false;
        }
        return true;

    }



    private async Task HandleNoOfNightsChange(ChangeEventArgs e)
    {
        NoOfNights = Convert.ToInt32(e.ToString());
        HotelBooking.OrderDetails.HotelRoomDto = await HotelRoomService.GetHotelRoomDetails(Id.Value,
            HotelBooking.OrderDetails.CheckInDate.ToString("MM/dd/yyyy"),
            HotelBooking.OrderDetails.CheckInDate.AddDays(NoOfNights).ToString("MM/dd/yyyy"));

        HotelBooking.OrderDetails.CheckOutDate = HotelBooking.OrderDetails.CheckInDate.AddDays(NoOfNights);
        HotelBooking.OrderDetails.HotelRoomDto.TotalDays = NoOfNights;
        HotelBooking.OrderDetails.HotelRoomDto.TotalAmount = NoOfNights * HotelBooking.OrderDetails.HotelRoomDto.RegularRate;
    }

}
